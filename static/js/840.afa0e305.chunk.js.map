{"version":3,"file":"static/js/840.afa0e305.chunk.js","mappings":"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","sources":["../../../../.yarn/cache/@babel-runtime-npm-7.17.2-ec60bc114d-a48702d271.zip/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../../.yarn/cache/@babel-runtime-npm-7.17.2-ec60bc114d-a48702d271.zip/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../../.yarn/cache/@babel-runtime-npm-7.17.2-ec60bc114d-a48702d271.zip/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../../.yarn/cache/@babel-runtime-npm-7.17.2-ec60bc114d-a48702d271.zip/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../../packages/miq-hookjs/src/index.tsx","../../../../packages/miq-staffjs/src/Setting/IndexUpdateView.tsx"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useEffect, useMemo, useReducer, useRef } from 'react';\n\n// https://elijahmanor.com/blog/react-blessed-userequest\n\n// https://hooks.umijs.org/hooks/async#refreshdeps\n// https://github.com/alibaba/hooks/blob/master/packages/hooks/src/useRequest/src/useRequestImplement.ts\n\nexport type baseOptionsType = {\n  refreshDeps?: any[];\n  onSuccess?: (res?: any) => void;\n  onError?: (errRes?: any) => void;\n};\nconst baseOptions: baseOptionsType = {\n  refreshDeps: [],\n};\n\nconst defaultResponse = {\n  loading: true,\n  status: null,\n  statusText: null,\n  config: null,\n  data: null,\n  headers: null,\n  request: null,\n};\n\nexport function useRequest(service: Function, options = baseOptions) {\n  const [res, dispatch] = useReducer(responseReducer, defaultResponse);\n  const isMountedRef = useRef(true);\n\n  const { onSuccess, onError } = options;\n  const makeRequest = useMemo(\n    () => () => {\n      dispatch({ type: 'LOADING' });\n\n      return service()\n        .then((payload) => {\n          if (!isMountedRef.current) return null;\n          dispatch({ type: 'SET_RES', payload });\n          onSuccess?.(payload);\n        })\n        .catch((err) => {\n          if (!isMountedRef.current) return null;\n          dispatch({ type: 'SET_ERR', payload: err });\n          onError?.(err);\n          // throw err;\n        });\n    },\n    [service, onSuccess, onError]\n  );\n\n  const { refreshDeps } = options;\n\n  const deps = useMemo(() => {\n    if (Array.isArray(refreshDeps)) {\n      return [...refreshDeps, makeRequest];\n    }\n    return [makeRequest];\n  }, refreshDeps);\n\n  // console.log(refreshDeps, deps);\n\n  useEffect(() => {\n    makeRequest();\n  }, deps);\n\n  useEffect(() => {\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, [isMountedRef]);\n\n  return {\n    res: res,\n    loading: res.loading,\n\n    addItem: (payload: any) => dispatch({ type: 'ADD_ITEM', payload }),\n    updateItem: (payload: any) => dispatch({ type: 'UPDATE_ITEM', payload }),\n    removeItem: (payload: any) => dispatch({ type: 'REMOVE_ITEM', payload }),\n\n    updateData: (payload: any) => dispatch({ type: 'UPDATE_DATA', payload }),\n    setData: (payload: any) => dispatch({ type: 'SET_DATA', payload }),\n    removeData: () => dispatch({ type: 'REMOVE_DATA' }),\n\n    setLoading: () => dispatch({ type: 'LOADING' }),\n    setRes: (payload: any) => dispatch({ type: 'SET_RES', payload }),\n    setError: (payload: any) => dispatch({ type: 'SET_ERR', payload }),\n\n    refresh: makeRequest,\n  };\n}\n\nconst hasKey = (obj, key) => Object.keys(obj).includes(`${key}`);\n\nconst responseReducer = (state: typeof defaultResponse, action): typeof defaultResponse => {\n  const { type, payload } = action;\n  let data, results;\n\n  switch (type) {\n    case 'ADD_ITEM':\n      data = state.data;\n      if (hasKey(data, 'results')) {\n        const { append, ...rest } = payload;\n        if (append) results = [...data.results, rest];\n        else results = [rest, ...data.results];\n\n        data = { ...state.data, results, count: state.data.count == null ? 1 : state.data.count + 1 };\n      }\n      return { ...state, data };\n    case 'UPDATE_ITEM':\n      data = state.data;\n      if (hasKey(data, 'results')) {\n        results = data.results.map((i) => {\n          if (i.slug === payload.slug) return payload;\n          return i;\n        });\n        data = { ...state.data, results };\n      }\n      return { ...state, data };\n    case 'REMOVE_ITEM':\n      data = state.data;\n      if (hasKey(data, 'results')) {\n        results = data.results.filter((i) => i.slug !== payload.slug);\n        data = { ...state.data, results };\n      }\n      return { ...state, data };\n\n    case 'UPDATE_DATA':\n      return { ...state, data: { ...state.data, ...payload } };\n    case 'SET_DATA':\n      return { ...state, data: payload };\n    case 'REMOVE_DATA':\n      return { ...state, data: null };\n\n    case 'LOADING':\n      return { ...state, loading: true };\n\n    case 'SET_RES':\n    case 'SET_ERR':\n      return { ...state, ...payload, loading: false };\n\n    default:\n      return { ...state };\n  }\n};\n","import * as React from 'react';\nimport { useRequest } from '@miq/hookjs';\nimport Form, { useForm } from '@miq/formjs';\nimport { Response, StaffCrudModel } from '@miq/utiljs';\nimport Staff from '..';\n\n//#region IndexModel\n\nconst Index = (data: any) => {\n  return Object.assign({}, StaffCrudModel(data, 'index'));\n};\n\n//#endregion IndexModel\n\n//#region IndexUpdateView\n\nexport default function IndexUpdateView(props: any) {\n  const form = useForm({ title: '' });\n  const { res, setRes, setError } = useRequest(() => Index({ slug: 'current' }).detail(), {\n    refreshDeps: [],\n    onSuccess: ({ data }: any) => form.setValues({ title: data.title || '' }),\n  });\n\n  const r = new Response(res);\n  if (!r.isSuccess) return null;\n\n  const instance = Index(r.data);\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    return instance\n      .patch(form.values)\n      .then(({ data }: any) => setRes(data))\n      .catch(({ response }: any) => setError(response));\n  };\n\n  return (\n    <Staff.View title=\"Site HomePage Settings\" back=\"settings/\">\n      <Form context={form} onSubmit={handleSubmit}>\n        <Staff.Section title=\"Index Page Details\">\n          <Form.Field label=\"Meta title\" error={form.errors.title}>\n            <Form.Text required name=\"title\" maxLength={99} />\n          </Form.Field>\n\n          <div className=\"\">\n            <Form.Submit value=\"Save\" className=\"btn-primary-2\" />\n          </div>\n        </Staff.Section>\n      </Form>\n    </Staff.View>\n  );\n}\n\n//#endregion IndexUpdateView\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","baseOptions","refreshDeps","defaultResponse","loading","status","statusText","config","data","headers","request","useRequest","service","options","useReducer","responseReducer","res","dispatch","isMountedRef","useRef","onSuccess","onError","makeRequest","useMemo","type","then","payload","current","catch","err","deps","useEffect","addItem","updateItem","removeItem","updateData","setData","removeData","setLoading","setRes","setError","refresh","hasKey","obj","key","Object","keys","includes","state","action","results","append","rest","count","map","i","slug","filter","Index","assign","StaffCrudModel","IndexUpdateView","props","form","useForm","title","detail","setValues","r","Response","isSuccess","instance","back","context","onSubmit","e","preventDefault","patch","values","response","label","error","errors","required","name","maxLength","className","value"],"sourceRoot":""}